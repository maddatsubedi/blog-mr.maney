---
import config from "@/config/config.json";
import { Image } from "astro:assets";
import LinkIconMap from "../function-components/LinkIconMap";
const { link, className } = Astro.props;
import { markdownify, slugify } from "@/lib/utils/textConverter";
// console.log(link);
---

<a
  href={link?.link_to ? link.link_to : `#`}
  class={`main-link-wrapper h-[250px] flex-grow cursor-pointer relative ${className || ``}`}
>
  <div
    class="main-link bg-purple-50 m-0 h-full w-full rounded-2xl overflow-hidden relative z-[2] shadow-small"
  >
    <Image
      src={link.image || "/images/fallback_images/about_main_link_fallback.jpg"}
      class="main-link-image text-black w-full object-cover object-center h-full absolute top-0 left-0 m-0"
      alt="image"
      width={200}
      height={200}
    />
    <div
      class="main-link-text-overlay-wrapper text-[#ffffff] absolute h-full w-full p-4 flex items-end"
    >
      <div
        class="main-link-text-overlay w-full flex flex-col text-center gap-2"
      >
        <div class="main-link-title leading-none text-xl font-bold">
          {markdownify(link?.title || `[title]`)}
        </div>
        <div class="line border-[1.5px] border-white rounded-full"></div>
        <!-- <div class="line h-[2px] min-h-[2px] max-h[0.25px] bg-white rounded-full"></div> -->
        <div class="main-link-subtitle leading-none">
          <div class="main-link-subtitle-text">{markdownify(link?.subtitle || `[subtitle]`)}</div>
        </div>
      </div>
    </div>
  </div>
  <div
    class="badge z-[3] bg-white text-primary rounded-md flex justify-center items-center text-3xl m-0 w-[100px] h-[60px]  absolute top-0 mx-auto left-0 right-0 translate-y-[-50%] shadow-medium"
  >
    {(<LinkIconMap linkTo={link?.link_to} />)}
  </div>
</a>

<style>
  .main-link-text-overlay-wrapper {
    background: #00000066;
    transition: 0.25s ease-in-out;
  }

  .main-link-subtitle {
    display: grid;
    grid-template-rows: 0fr;
    transition: 0.25s ease-in-out;
  }
  .main-link-wrapper:hover .main-link-text-overlay-wrapper {
    backdrop-filter: blur(5px);
    background: #33333366;
  }
  .main-link-wrapper:hover .main-link-text-overlay {
    margin-bottom: 0rem;
  }
  .main-link-wrapper:hover .main-link-subtitle {
    grid-template-rows: 1fr;
  }
  .main-link-wrapper:hover::before,
  .main-link-wrapper:hover::after {
    transform: scale(1.05);
    border-width: 2px;
  }
  .main-link-text-overlay {
    margin-bottom: -0.5rem;
    transition: 0.25s ease-in-out;
  }

  .main-link-subtitle-text {
    overflow: hidden;
  }

  .main-link-wrapper::before,
  .main-link-wrapper::after {
    position: absolute;
    content: "";
    border: 1px solid #b43d4b;
    border-radius: 1rem;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    z-index: 1;
    transition: 0.25s ease-in-out;
    pointer-events: none;
  }
  .main-link-wrapper::before {
    transform: rotate(-3.67deg) translate(-10px, 10px);
  }
  .main-link-wrapper::after {
    transform: rotate(3.67deg) translate(-7.5px, 15px);
  }

  /* @media screen and (max-width: 1450px) {
    .main-link {
      width: 250px;
      min-width: 250px;
      height: 200px;
    }

    .badge {
      width: 70px;
      height: 50px;
      font-size: 1.5rem;
    }
  }
  @media screen and (max-width: 1350px) {
    .main-link {
      width: 225px;
      min-width: 225px;
      height: 175px;
    }
  }
  @media screen and (max-width: 1250px) {
    .md-hide {
      display: none;
    }
    .main-link-wrapper {
      flex-grow: 1;
      height: 175px;
    }
    .main-link {
      width: 100%;
      min-width: unset;
      height: 100%;
      position: absolute;
    }
  } */
</style>
