---
import { markdownify } from "@/lib/utils/textConverter";
import { Image } from "astro:assets";
import { createElement } from "react";
import { FaBlog } from "react-icons/fa";
import LinkIconMap from "@/layouts/function-components/LinkIconMap";
import MainLink from "../MainLink.astro";

const { about } = Astro.props;
const {
  title,
  secondTitle,
  sideText,
  description,
  image_group,
  main_images,
  main_links_group,
} = about;

// Fix-Later-1: markdownify returning <br> text instead of new line
const descriptionArray = description.split("\n");

// console.log(about);
---

<section
  class="home-section"
  style="background-color: #f5f4fe;"
>
  <div class="home-section-content flex gap-10">
    <div
      class="side-text px-7 text-primary opacity-60 hidden 2md:flex text-7xl font-light scale-x-[-1] scale-y-[-1] font-montserrat text-end"
    >
      {markdownify(sideText)}
    </div>
    <div class="main-section flex flex-col gap-14 max-w-[1280px]">
      <div class="text-center">
        <h1
          class="first-title text-transparent bg-clip-text bg-gradient-to-br from-[#F71B35] to-[#FFFAC3] text-[10rem] leading-none font-montserrat font-extrabold"
        >
          {markdownify(title)}
        </h1>
        <p
          class="second-title text-[#3B3A39] font-extrabold leading-none text-[3.3rem]"
        >
          {markdownify(secondTitle)}
        </p>
      </div>
      <div class="content grid grid-cols-[1fr_300px] gap-14">
        <div class="content-bottom flex flex-col gap-14 justify-center">
          <div class="description">
            {
              descriptionArray.map((desc: string, index: number) => (
                <p class={`text-[#464242] m-0 ${index !== 0 ? `mt-2` : ``}`}>
                  {markdownify(desc)}
                </p>
              ))
            }
          </div>
          <div class="bottom-group flex items-center gap-16">
            <div class="image-group grid grid-cols-3 gap-5 flex-grow">
              {
                image_group.map((image: any) => (
                  <div class="image-wrapper flex">
                    <Image
                      src={image.image}
                      class="group-image object-cover object-center m-0 flex-grow rounded-xl aspect-[16/11]"
                      alt="image"
                      width={150}
                      height={100}
                    />
                  </div>
                ))
              }
            </div>
            <div class="bottom-main-links-group mt-[25px] md-show hidden">
              {main_links_group.map((link: any) => <MainLink link={link} />)}
            </div>
            <MainLink className="md-hide" link={main_links_group[0]} />
          </div>
        </div>
        <div class="main-links-group flex flex-col justify-center gap-14">
          {
            main_links_group.map(
              (link: any, index: number) =>
                index !== 0 && <MainLink link={link} />,
            )
          }
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .side-text {
    writing-mode: vertical-rl;
  }

  .shadow-medium {
    box-shadow: 0px 2px 10px 0px #00000080;
  }

  /* 2XL Screen */
  @media screen and (max-width: 1450px) {
    .content {
      grid-template-columns: 1fr 250px;
    }

    .group-image {
      aspect-ratio: 16/10;
    }
  }
  @media screen and (max-width: 1350px) {
    .side-text {
      font-size: 3.75rem;
      padding-left: 1.5rem;
      padding-right: 1.5rem;
    }
    .main-links-group {
      gap: 3rem;
    }
    .content {
      gap: 3rem;
    }
    .bottom-group {
      gap: 3.5rem;
    }
    .content {
      grid-template-columns: 1fr 225px;
    }
  }
  @media screen and (max-width: 1250px) {
    .content {
      display: flex;
    }
    .main-links-group {
      display: none;
    }

    .bottom-group {
      flex-direction: column;
    }
    .md-hide {
      display: none;
    }
    .md-show {
      display: unset;
    }
    .bottom-main-links-group.md-show {
      display: flex;
    }
    .image-group {
      align-self: stretch;
    }
    .group-image {
      aspect-ratio: 16/6.75;
    }
    .bottom-main-links-group {
      width: 100%;
      row-gap: 4rem;
      column-gap: 3.5rem;
      flex-wrap: wrap;
      justify-content: center;
    }
  }

  @media screen and (max-width: 1025px) {
    .section {
      gap: 2rem;
    }
    .side-text {
      font-size: 3.25rem;
      padding-left: 1.25rem;
      padding-right: 1.25rem;
    }

    .first-title {
      font-size: 7.5rem;
    }
    .second-title {
      font-size: 2.5rem;
      margin-top: -40px;
    }

    .main-section {
      gap: 2.25rem;
    }
    .bottom-group {
      gap: 2.25rem;
    }
    .content-bottom {
      gap: 2.25rem;
    }
  }

  @media screen and (max-width: 800px) {
    .first-title {
      font-size: 4rem;
    }
    .second-title {
      font-size: 2.5rem;
      margin-top: -10px;
    }
    .bottom-main-links-group {
      flex-direction: column;
    }
  }
</style>
